@page "/GridMasterDetail"

@using Demo.Blazor.Model.SalesViewer
@using Demo.Blazor.Services
@inject SalesViewerService SalesViewerService

<div class="demo-description">
    <h2>Data Grid - Master-Detail View</h2>
    <p>
        The <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DxDataGrid-1">DxDataGrid</a> component allows you to build master-detail layouts of any complexity and depth with a detail row template. This template defines the way detail data is presented.
    </p>
    <p>
        This demo module illustrates how to use a nested grid component to visualize a master-detail relationship between two data tables. To do this, follow the steps below.
    </p>
    <ol>
        <li>Add two <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DxDataGrid-1">DxDataGrid</a> components to your application.</li>
        <li>Bind the first grid (master) to a master data source and enable its <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.Base.DxDataGridBase-1.ShowDetailRow">ShowDetailRow</a> property.</li>
        <li>Bind the second grid (detail) to a detail data source that uses the template's context object as a filter criterion.</li>
        <li>(Optional) To automatically collapse an expanded detail row when a new detail row is displayed, set the <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.Base.DxDataGridBase-1.AutoCollapseDetailRow">AutoCollapseDetailRow</a> property to true.</li>
    </ol>
    <p>
        Create a <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.Base.DxDataGridBase-1.DetailRowTemplate">DetailRowTemplate</a> template for the master grid and add the detail grid to this template.
    </p>
</div>


@if (ProductsDataSource != null)
{
    <DxDataGrid @ref="@grid" 
                Data="@ProductsDataSource" 
                AutoCollapseDetailRow="true" 
                ShowDetailRow="true"
                ShowFilterRow="false"
                SelectionMode="DataGridSelectionMode.None" 
                PageSize="4">
        <ChildContent>
            <DxDataGridColumn Field="@nameof(Product.Name)" />
            <DxDataGridColumn Field="@nameof(Product.Description)" />
            <DxDataGridSpinEditColumn Field="@nameof(Product.ListPrice)" />
            <DxDataGridSpinEditColumn Field="@nameof(Product.UnitsInInventory)" />
            <DxDataGridSpinEditColumn Field="@nameof(Product.UnitsInManufacturing)" />
        </ChildContent>
        <DetailRowTemplate>
            <DxTabs>
                <DxTabPage Text="Sales">
                    <div class="p-3">
                        @if (SalesDataSource != null)
                        {
                            <DxDataGrid Data="@SalesDataSource.Where(x => x.ProductId == context.Id)" 
                                        SelectionMode="DataGridSelectionMode.None" 
                                        ShowFilterRow="false">
                                <DxDataGridDateEditColumn Field="@nameof(Sale.SaleDate)" />
                                <DxDataGridSpinEditColumn Field="@nameof(Sale.Units)" />
                                <DxDataGridSpinEditColumn Field="@nameof(Sale.TotalCost)" />
                                <DxDataGridSpinEditColumn Field="@nameof(Sale.Discount)" />
                            </DxDataGrid>
                        }
                        else
                        {
                            <em>Loading Sales...</em>
                        }
                    </div>
                </DxTabPage>
                <DxTabPage Text="Plant Info">
                    @{
                        var plantInfo = PlantsDataSource?.FirstOrDefault(x => x.Id == context.PlantId);
                    }
                    @if (plantInfo != null)
                    {
                        <div class="p-3">
                            <b>Name:</b>
                            <p>
                                @plantInfo.Name
                            </p>
                            <b>Address:</b>
                            <p>
                                @plantInfo.Address
                            </p>
                            <b>Zip:</b>
                            <p>
                                @plantInfo.Zip
                            </p>
                        </div>
                    }
                    else
                    {
                        <em>Loading Plant Info...</em>
                    }
                </DxTabPage>
            </DxTabs>
        </DetailRowTemplate>
    </DxDataGrid>
} else
{
    <em>Loading...</em>
}
<div class="code-snippet card demo-card-wide">
    <CodeSnippetHeader></CodeSnippetHeader>
    <div class="card-footer text-muted ">
        <CodeSnippet_Grid_MasterDetail></CodeSnippet_Grid_MasterDetail>
    </div>
</div>


@code {

    IEnumerable<Product> ProductsDataSource;
    IEnumerable<Sale> SalesDataSource;
    IEnumerable<Plant> PlantsDataSource;

    DxDataGrid<Product> grid;
    bool expandedRowInitialized;

    protected override async Task OnInitializedAsync()
    {
        ProductsDataSource = await SalesViewerService.GetProducts();
        SalesDataSource = await SalesViewerService.GetSales();
        PlantsDataSource = await SalesViewerService.GetPlants();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!expandedRowInitialized)
        {
            grid.DetailRows.ExpandRow(ProductsDataSource.First());
            expandedRowInitialized = true;
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}