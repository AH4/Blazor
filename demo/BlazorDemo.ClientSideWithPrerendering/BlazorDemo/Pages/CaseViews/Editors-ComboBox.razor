@inherits DemoWithResizableComponent

@{
    RenderFragment<string> GetLink = (propName) =>
    @<a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.Base.DxComboBoxBase-1.@propName">@propName</a>;
}

<div class="demo-description" id="Overview">
    <h2><DemoNavLink Link="ComboBox#Overview" />ComboBox – Overview</h2>
    <p>
        The <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.DxComboBox-1">ComboBox</a> is an editor that allows users to select an item from a drop-down list.
    </p>
    <p>
        The main ComboBox API members are listed below.
    </p>
    <ul>
        <li>@GetLink("Data") – Specifies the data source that populates the editor’s list items.</li>
        <li>@GetLink("TextFieldName") – Specifies the data source’s field that supplies text for items.</li>
        <li>@GetLink("Text") – Specifies the editor’s text.</li>
        <li>@GetLink("TextChanged") - Fires when the editor text was changed.</li>
        <li>@GetLink("SelectedItem") – Specifies the drop-down list’s selected item.</li>
        <li>@GetLink("SelectedItemChanged") – Fires when the selected item was changed.</li>
    </ul>
    <p>
        The ComboBox component supports different size modes. To specify the component's size in code, use the <a class="helplink" target="_blank" href="https://docs.devexpress.com/Blazor/DevExpress.Blazor.Base.DxResizableEditorBase-2.SizeMode">SizeMode</a> property. To apply different size modes, use the drop-down list in the demo card's header.
    </p>
    <p>
        This demo illustrates how to bind the ComboBox to a list of complex business objects.
    </p>
</div>

<div class="card demo-card demo-card-shadow">
    <div class="card-header">
        <DemoToolbar @bind-SelectedSize="SizeMode">
            <TitleTemplate>
                    Selected item: { FirstName=<b>@SelectedRealBusinessObject.FirstName</b>, LastName=<b>@SelectedRealBusinessObject.LastName</b>, Department=<b>@SelectedRealBusinessObject.Department</b> }
            </TitleTemplate>
        </DemoToolbar>

    </div>
    <div class="card-body mw-480">
        <DxComboBox Data="@Persons.DataSource"
                    TextFieldName="Text"
                    @bind-SelectedItem="@SelectedRealBusinessObject"
                    SizeMode="SizeMode"></DxComboBox>
    </div>
</div>

<CodeSnippet_Editor_ComboBox></CodeSnippet_Editor_ComboBox>


@code {
    Person selectedRealBusinessObject = Persons.DataSource[0];
    Person SelectedRealBusinessObject {
        get => selectedRealBusinessObject;
        set { selectedRealBusinessObject = value; InvokeAsync(StateHasChanged); }
    }


}

