<CodeSnippet>
@(@" <DxFormLayout>
    <DxFormLayoutTabPages>
        <DxFormLayoutTabPage Caption=""Personal Information"">
            <DxFormLayoutItem Caption=""First Name:"" ColSpanMd=""6"" >
                <Template>
                    <DxTextBox @bind-Text=""@FirstName""></DxTextBox>
                </Template>
            </DxFormLayoutItem>

            <DxFormLayoutItem Caption=""Last Name:"" ColSpanMd=""6"">
                <Template>
                    <DxTextBox @bind-Text=""@LastName""></DxTextBox>
                </Template>
            </DxFormLayoutItem>

            <DxFormLayoutItem Caption=""Birth Date:"" ColSpanMd=""6"">
                <Template>
                    <DxDateEdit @bind-Date=""@BirthDate""></DxDateEdit>
                </Template>
            </DxFormLayoutItem>
        </DxFormLayoutTabPage>

        <DxFormLayoutTabPage Caption=""Work Information"">
            <DxFormLayoutItem Caption=""Position:"" ColSpanMd=""6"">
                <Template>
                    <DxTextBox @bind-Text=""@Position""></DxTextBox>
                </Template>
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption=""Hire Date:"" ColSpanMd=""6"">
                <Template>
                    <DxDateEdit @bind-Date=""@HireDate""></DxDateEdit>
                </Template>
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption=""Notes:"" ColSpanMd=""6"">
                <Template>
                    <DxTextBox @bind-Text=""@Notes""></DxTextBox>
                </Template>
            </DxFormLayoutItem>
        </DxFormLayoutTabPage>
    </DxFormLayoutTabPages>
</DxFormLayout>

@code {
    string firstName = ""Nancy"";
    string FirstName { get => firstName; set { firstName = value; OnChanged(); } }

    string lastName = ""Davolio"";
    string LastName { get => lastName; set { lastName = value; OnChanged(); } }

    DateTime birthDate = DateTime.Now.AddYears(-20);
    DateTime BirthDate { get => birthDate; set { birthDate = value; OnChanged(); } }

    string position = ""Sales Representative"";
    string Position { get => position; set { position = value; OnChanged(); } }

    DateTime hireDate = DateTime.Now.AddYears(-20);
    DateTime HireDate { get => hireDate; set { hireDate = value; OnChanged(); } }

    string notes = ""Education includes a BA in psychology."";
    string Notes { get => notes; set { notes = value; OnChanged(); } }

    void OnChanged() { InvokeAsync(StateHasChanged); }
}")
</CodeSnippet>