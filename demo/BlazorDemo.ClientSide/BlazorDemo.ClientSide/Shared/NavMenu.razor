<DxTreeView @ref="@treeView" 
            CssClass="app-sidebar" 
            ExpandButtonIconCssClass="demo-icon-expand" 
            CollapseButtonIconCssClass="demo-icon-collapse"
            AllowSelectNodes="true" 
            NodeExpandCollapseAction="TreeViewNodeExpandCollapseAction.NodeClick"
            BeforeExpand="@BeforeExpand"
            SelectionChanged="@SelectionChanged">
    <Nodes>
        <DxTreeViewNode Text="Overview" NavigateUrl="">
        </DxTreeViewNode>
        <DxTreeViewNode Text="Data Grid">
            <Nodes>
                <DxTreeViewNode Text="Column Types" NavigateUrl="GridColumnTypes"></DxTreeViewNode>
                <DxTreeViewNode Text="Sort Data" NavigateUrl="GridSortData"></DxTreeViewNode>
                <DxTreeViewNode Text="Grouping" NavigateUrl="GridGrouping"></DxTreeViewNode>
                <DxTreeViewNode Text="Filter Row" NavigateUrl="GridFilterRow"></DxTreeViewNode>
                <DxTreeViewNode Text="Selection" NavigateUrl="GridSelection"></DxTreeViewNode>
                <DxTreeViewNode Text="Templates" NavigateUrl="GridTemplate"></DxTreeViewNode>
                <DxTreeViewNode Text="Scrolling" NavigateUrl="GridScrolling"></DxTreeViewNode>
                <DxTreeViewNode Text="Virtual Scrolling" NavigateUrl="GridVirtualScrolling"></DxTreeViewNode>
                <DxTreeViewNode Text="Cascading Editors" NavigateUrl="GridCascadingEditors"></DxTreeViewNode>
                <DxTreeViewNode Text="Edit Form Validation" NavigateUrl="GridEditFormTemplateValidation"></DxTreeViewNode>
                <DxTreeViewNode Text="Large Data Source" NavigateUrl="GridLargeDataBase"></DxTreeViewNode>
                <DxTreeViewNode Text="Master-Detail View" NavigateUrl="GridMasterDetail"></DxTreeViewNode>
            </Nodes>
        </DxTreeViewNode>
        <DxTreeViewNode Text="Pivot Grid">
            <Nodes>
                <DxTreeViewNode Text="Overview" NavigateUrl="PivotGrid"></DxTreeViewNode>
                <DxTreeViewNode Text="Templates" NavigateUrl="PivotGridTemplates"></DxTreeViewNode>
                <DxTreeViewNode Text="Large Data Source" NavigateUrl="PivotGridLargeDataBase"></DxTreeViewNode>
                <DxTreeViewNode Text="Chart Integration" NavigateUrl="PivotGridChartIntegration"></DxTreeViewNode>
            </Nodes>
        </DxTreeViewNode>
        <DxTreeViewNode Text="Charts" BadgeText="Upd">
            <Nodes>
                <DxTreeViewNode Text="Series Types" NavigateUrl="ChartSeriesTypes"></DxTreeViewNode>
                <DxTreeViewNode Text="Dynamic Series" NavigateUrl="ChartDynamicSeries"></DxTreeViewNode>
                <DxTreeViewNode Text="Range Series" NavigateUrl="ChartRangeSeries"></DxTreeViewNode>
                <DxTreeViewNode Text="Financial Series" NavigateUrl="ChartFinancialSeries"></DxTreeViewNode>
                <DxTreeViewNode Text="Pie Series" NavigateUrl="ChartPieSeries"></DxTreeViewNode>
                <DxTreeViewNode Text="Customization" NavigateUrl="ChartCustomization"></DxTreeViewNode>
                <DxTreeViewNode Text="Series Customization" NavigateUrl="ChartSeriesCustomization" BadgeText="New"></DxTreeViewNode>
            </Nodes>
        </DxTreeViewNode>
        <DxTreeViewNode Text="Scheduler">
            <Nodes>
                <DxTreeViewNode Text="View Types" NavigateUrl="SchedulerViewTypes"></DxTreeViewNode>
                <DxTreeViewNode Text="Recurring Appointments" NavigateUrl="SchedulerRecurringAppointments"></DxTreeViewNode>
            </Nodes>
        </DxTreeViewNode>
        <DxTreeViewNode Text="Data Editors">
            <Nodes>
                <DxTreeViewNode Text="Calendar" NavigateUrl="Calendar">
                </DxTreeViewNode>
                <DxTreeViewNode Text="ComboBox" NavigateUrl="ComboBox">
                </DxTreeViewNode>
                <DxTreeViewNode Text="Date Edit" NavigateUrl="DateEdit">
                </DxTreeViewNode>
                <DxTreeViewNode Text="List Box" NavigateUrl="ListBox">
                </DxTreeViewNode>
                <DxTreeViewNode Text="Spin Edit" NavigateUrl="SpinEdit">
                </DxTreeViewNode>
                <DxTreeViewNode Text="Text Box" NavigateUrl="TextBox">
                </DxTreeViewNode>
            </Nodes>
        </DxTreeViewNode>
        <DxTreeViewNode Text="Navigation and Layout" BadgeText="Upd">
            <Nodes>
                <DxTreeViewNode Text="Form Layout" NavigateUrl="FormLayout">
                </DxTreeViewNode>
                <DxTreeViewNode Text="Pager" NavigateUrl="Pager">
                </DxTreeViewNode>
                <DxTreeViewNode Text="Popup" NavigateUrl="Popup">
                </DxTreeViewNode>
                <DxTreeViewNode Text="Tabs" NavigateUrl="Tabs">
                </DxTreeViewNode>
                <DxTreeViewNode Text="TreeView" NavigateUrl="TreeView" BadgeText="Upd">
                </DxTreeViewNode>
            </Nodes>
        </DxTreeViewNode>
        <DxTreeViewNode Text="Form Validation" NavigateUrl="FormValidation">
        </DxTreeViewNode>
    </Nodes>
</DxTreeView>

<div class="footer">
    <div class="info-wrapper">
        <div class="version">Version: 19.1.8.0</div>
        <div class="copyright">
            <span>Copyright &copy; 2006-</span><span>@(DateTime.Now.Year.ToString())</span>
            Developer Express Inc
        </div>
    </div>
</div>

@code {
    DxTreeView treeView;

    protected void SelectionChanged(TreeViewNodeEventArgs e) {
        if (e.NodeInfo.IsLeaf) {
            var parentInfo = e.NodeInfo.Parent;
            if (parentInfo != null) {
                var parentSiblingNodesInfo = treeView.GetNodesInfo(n => !n.IsLeaf && n.Level == parentInfo.Level && !string.Equals(n.Text, parentInfo.Text));
                foreach (var nodeInfo in parentSiblingNodesInfo)
                    treeView.SetNodeExpanded(n => string.Equals(n.Text, nodeInfo.Text), false);
            }
            else
                treeView.CollapseAll();
        }
    }

    protected void BeforeExpand(TreeViewNodeCancelEventArgs e) {
        if (!e.CausedByAPI)
            treeView.CollapseAll();
    }
}